#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <DHT.h>

// Define the DHT11 sensor
#define DHTPIN D4      // Pin where the data pin of DHT is connected
#define DHTTYPE DHT11  // DHT 11

DHT dht(DHTPIN, DHTTYPE);

// Replace with your network credentials
const char* ssid = "your_SSID";
const char* password = "your_PASSWORD";

// Create an instance of the server at port 80
ESP8266WebServer server(80);

void setup() {
  // Start the DHT sensor
  dht.begin();

  // Start the Serial monitor
  Serial.begin(115200);
  
  // Connect to Wi-Fi
  Serial.println("Connecting to Wi-Fi...");
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting...");
  }

  // Once connected
  Serial.println("Connected to Wi-Fi");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());

  // Set up the web server
  server.on("/", handleRoot);
  server.begin();
  Serial.println("HTTP server started");
}

void loop() {
  // Handle incoming client requests
  server.handleClient();
}

// Function to handle the web page display
void handleRoot() {
  float humidity = dht.readHumidity();
  float temperature = dht.readTemperature();

  // Check if any reads failed and exit early
  if (isnan(humidity) || isnan(temperature)) {
    server.send(200, "text/html", "Failed to read from DHT sensor!");
    return;
  }

  // HTML code to display sensor data
  String html = "<!DOCTYPE html><html>";
  html += "<head><meta http-equiv='refresh' content='5'/>"; // Refresh page every 5 seconds
  html += "<title>ESP8266 DHT11 Web Server</title>";
  html += "<style>body { font-family: Arial; text-align: center; }</style>";
  html += "</head><body>";
  html += "<h1>ESP8266 DHT11 Sensor Data</h1>";
  html += "<p>Temperature: " + String(temperature) + " &#8451;</p>";
  html += "<p>Humidity: " + String(humidity) + " %</p>";
  html += "</body></html>";

  server.send(200, "text/html", html);
}
