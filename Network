#include <ESP8266WiFi.h>
#include "DHT.h"

// Replace with your network credentials
const char* ssid = "motoedge50fusion_1103";
const char* password = "1234567890";

// ThingSpeak details
const char* server = "api.thingspeak.com";
String apiKey = "S7I9PVJ3MI66M8P7"; // Replace with your ThingSpeak write API key

// DHT settings
#define DHTPIN 4       // DHT11 data pin connected to GPIO4 (D2 on NodeMCU)
#define DHTTYPE DHT11  // DHT 11
DHT dht(DHTPIN, DHTTYPE);

// Relay settings
#define RELAY_PIN 5    // GPIO5 (D1 on NodeMCU) connected to relay module

WiFiClient client;

void setup() {
  Serial.begin(115200);
  delay(10);

  dht.begin();

  // Set up relay pin
  pinMode(RELAY_PIN, OUTPUT);
  digitalWrite(RELAY_PIN, LOW); // Turn off relay initially

  // Connect to Wi-Fi
  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");
}

void loop() {
  // Reading temperature or humidity takes about 250 milliseconds
  float humidity = dht.readHumidity();
  float temperature = dht.readTemperature(); // Celsius

  // Check if any reads failed and exit early (to try again).
  if (isnan(humidity) || isnan(temperature)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  // Print data to serial monitor for debugging
  Serial.print("Humidity: ");
  Serial.print(humidity);
  Serial.print(" %\t");
  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.println(" *C");

  // Relay control based on temperature
  if (temperature > 30) {
    digitalWrite(RELAY_PIN, HIGH); // Turn on relay if temperature > 30째C
    Serial.println("Relay ON - Temperature above 30째C");
  } else {
    digitalWrite(RELAY_PIN, LOW);  // Turn off relay if temperature <= 30째C
    Serial.println("Relay OFF - Temperature below or equal to 30째C");
  }

  // Connect to ThingSpeak
  if (client.connect(server, 80)) {
    String postStr = apiKey;
    postStr += "&field1=";
    postStr += String(temperature);
    postStr += "&field2=";
    postStr += String(humidity);
    postStr += "\r\n\r\n";

    client.print("POST /update HTTP/1.1\n");
    client.print("Host: api.thingspeak.com\n");
    client.print("Connection: close\n");
    client.print("X-THINGSPEAKAPIKEY: " + apiKey + "\n");
    client.print("Content-Type: application/x-www-form-urlencoded\n");
    client.print("Content-Length: ");
    client.print(postStr.length());
    client.print("\n\n");
    client.print(postStr);

    Serial.println("Data sent to ThingSpeak");

    client.stop();
  }

  // ThingSpeak allows updates every 15 seconds (minimum interval)
  delay(15000);
}
